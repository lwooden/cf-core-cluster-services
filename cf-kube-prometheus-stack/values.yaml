# Default values for cf-prometheus-kube-stack.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

kube-prometheus-stack:
  enabled: true
  grafana:
    sidecar:
      datasources:
        enabled: false
        defaultDatasourceEnabled: true
        isDefaultDatasource: true
        name: Prometheus
        uid: prometheus
    persistence:
      # persistence for Grafana data /var/lib/grafana
      enabled: false
      existingClaim: ebs-claim
    ingress:
      enabled: true
      hosts:
        - grafana.lowsandbox.com
      ingressClassName: nginx
      pathType: Prefix
      path: /
      tls:
        - secretName: "lowsandbox-tls"
    datasources:
      # trying this out -- manage this way to avoid complexity of sidecar reloads
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: "Prometheus"
            type: prometheus
            uid: prometheus
            url: http://kube-prometheus-stack-prometheus.monitoring:9090/
            access: proxy
            isDefault: true
            jsonData:
              httpMethod: POST
              timeInterval: 30s
          - name: "Alertmanager"
            type: alertmanager
            uid: alertmanager
            url: http://kube-prometheus-stack-alertmanager.monitoring:9093/
            access: proxy
            jsonData:
              handleGrafanaManagedAlerts: false
              implementation: prometheus
          # adding this to prevent users from having to adding Loki datasource everyday
          - name: "Loki"
            type: loki
            uid: loki
            url: http://loki-gateway.monitoring/
            access: proxy
            jsonData:
              timeout: 60
              maxLines: 1000

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
